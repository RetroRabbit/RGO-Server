// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RR.UnitOfWork;

#nullable disable

namespace RR.UnitOfWork.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240513124940_employeeQualificationEntity")]
    partial class employeeQualificationEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RR.UnitOfWork.Entities.ATS.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlacklistedReason")
                        .HasColumnType("text")
                        .HasColumnName("blacklistedReason");

                    b.Property<int>("BlacklistedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("blacklisted");

                    b.Property<string>("CV")
                        .HasColumnType("text")
                        .HasColumnName("cv");

                    b.Property<string>("CellphoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("cellphone");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text")
                        .HasColumnName("highestQualification");

                    b.Property<string>("IdNumber")
                        .HasColumnType("text")
                        .HasColumnName("idNumber");

                    b.Property<int>("JobPosition")
                        .HasColumnType("integer")
                        .HasColumnName("jobPosition");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("text")
                        .HasColumnName("linkedIn");

                    b.Property<string>("Location")
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("personalEmail");

                    b.Property<string>("PortfolioLink")
                        .HasColumnType("text")
                        .HasColumnName("portfolioLink");

                    b.Property<string>("PortfolioPdf")
                        .HasColumnType("text")
                        .HasColumnName("portfolioPdf");

                    b.Property<int>("PotentialLevel")
                        .HasColumnType("integer")
                        .HasColumnName("potentialLevel");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text")
                        .HasColumnName("profilePicture");

                    b.Property<int?>("QualificationEndDate")
                        .HasColumnType("integer")
                        .HasColumnName("qualificationEndDate");

                    b.Property<int>("Race")
                        .HasColumnType("integer")
                        .HasColumnName("race");

                    b.Property<int>("Referral")
                        .HasColumnType("integer")
                        .HasColumnName("referral");

                    b.Property<string>("School")
                        .HasColumnType("text")
                        .HasColumnName("school");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CRUDOperation")
                        .HasColumnType("integer")
                        .HasColumnName("CRUDOperation");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer")
                        .HasColumnName("createdById");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Date");

                    b.Property<string>("Table")
                        .HasColumnType("text")
                        .HasColumnName("table");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.ErrorLogging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dateOfIncident")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateOfIncident");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("stackTrace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stackTrace");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Chart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("DataTypes")
                        .HasColumnType("text[]")
                        .HasColumnName("dataTypes");

                    b.Property<List<string>>("Labels")
                        .HasColumnType("text[]")
                        .HasColumnName("labels");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Subtype")
                        .HasColumnType("text")
                        .HasColumnName("subType");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Chart");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.ChartDataSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChartId")
                        .HasColumnType("integer")
                        .HasColumnName("chartId");

                    b.Property<List<int>>("Data")
                        .HasColumnType("integer[]")
                        .HasColumnName("data");

                    b.Property<string>("Label")
                        .HasColumnType("text")
                        .HasColumnName("label");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.ToTable("ChartDataSet");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.ChartRoleLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChartId")
                        .HasColumnType("integer")
                        .HasColumnName("chartId");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("roleId");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.HasIndex("RoleId");

                    b.ToTable("ChartRoleLink");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<string>("CellphoneNo")
                        .HasColumnType("text")
                        .HasColumnName("cellphoneNo");

                    b.Property<int?>("ClientAllocated")
                        .HasColumnType("integer")
                        .HasColumnName("clientAllocated");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("text")
                        .HasColumnName("countryOfBirth");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateOfBirth");

                    b.Property<bool>("Disability")
                        .HasColumnType("boolean")
                        .HasColumnName("disability");

                    b.Property<string>("DisabilityNotes")
                        .HasColumnType("text")
                        .HasColumnName("disabilityNotes");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("text")
                        .HasColumnName("emergencyContactName");

                    b.Property<string>("EmergencyContactNo")
                        .HasColumnType("text")
                        .HasColumnName("emergencyContactNo");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("text")
                        .HasColumnName("employeeNumber");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeTypeId");

                    b.Property<DateTime>("EngagementDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("engagementDate");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("HouseNo")
                        .HasColumnType("text")
                        .HasColumnName("houseNo");

                    b.Property<string>("IdNumber")
                        .HasColumnType("text")
                        .HasColumnName("idNumber");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("text")
                        .HasColumnName("inactiveReason");

                    b.Property<string>("Initials")
                        .HasColumnType("text")
                        .HasColumnName("initials");

                    b.Property<float?>("LeaveInterval")
                        .HasColumnType("real")
                        .HasColumnName("leaveInterval");

                    b.Property<int?>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .HasColumnType("text")
                        .HasColumnName("nationality");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("PassportCountryIssue")
                        .HasColumnType("text")
                        .HasColumnName("passportCountryIssue");

                    b.Property<DateTime?>("PassportExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("passportExpirationDate");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text")
                        .HasColumnName("passportNumber");

                    b.Property<float?>("PayRate")
                        .HasColumnType("real")
                        .HasColumnName("payRate");

                    b.Property<int?>("PeopleChampion")
                        .HasColumnType("integer")
                        .HasColumnName("peopleChampion");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("text")
                        .HasColumnName("personalEmail");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.Property<int?>("PhysicalAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("physicalAddress");

                    b.Property<int?>("PostalAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("postalAddress");

                    b.Property<int?>("Race")
                        .HasColumnType("integer")
                        .HasColumnName("race");

                    b.Property<int?>("Salary")
                        .HasColumnType("integer")
                        .HasColumnName("salary");

                    b.Property<float?>("SalaryDays")
                        .HasColumnType("real")
                        .HasColumnName("salaryDays");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("text")
                        .HasColumnName("taxNumber");

                    b.Property<int?>("TeamLead")
                        .HasColumnType("integer")
                        .HasColumnName("teamLead");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("terminationDate");

                    b.HasKey("Id");

                    b.HasIndex("ClientAllocated");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("PeopleChampion");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("PostalAddressId");

                    b.HasIndex("TeamLead");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("ComplexName")
                        .HasColumnType("text")
                        .HasColumnName("complexName");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postalCode");

                    b.Property<string>("Province")
                        .HasColumnType("text")
                        .HasColumnName("province");

                    b.Property<string>("StreetName")
                        .HasColumnType("text")
                        .HasColumnName("streetName");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("text")
                        .HasColumnName("streetNumber");

                    b.Property<string>("SuburbOrDistrict")
                        .HasColumnType("text")
                        .HasColumnName("suburbOrDistrict");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("text")
                        .HasColumnName("unitNumber");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAddress");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeBanking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolderName")
                        .HasColumnType("text")
                        .HasColumnName("accountHolderName");

                    b.Property<string>("AccountNo")
                        .HasColumnType("text")
                        .HasColumnName("accountNo");

                    b.Property<int>("AccountType")
                        .HasColumnType("integer")
                        .HasColumnName("accountType");

                    b.Property<string>("BankName")
                        .HasColumnType("text")
                        .HasColumnName("bankName");

                    b.Property<string>("Branch")
                        .HasColumnType("text")
                        .HasColumnName("branch");

                    b.Property<string>("DeclineReason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<string>("File")
                        .HasColumnType("text")
                        .HasColumnName("file");

                    b.Property<DateOnly>("LastUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("lastUpdateDate");

                    b.Property<DateOnly>("PendingUpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("pendingUpdateDate");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeBanking");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<int>("FieldCodeId")
                        .HasColumnType("integer")
                        .HasColumnName("fieldCodeId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FieldCodeId");

                    b.ToTable("EmployeeData");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeDate");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Blob")
                        .HasColumnType("text")
                        .HasColumnName("blob");

                    b.Property<bool>("CounterSign")
                        .HasColumnType("boolean")
                        .HasColumnName("counterSign");

                    b.Property<int?>("DocumentType")
                        .HasColumnType("integer")
                        .HasColumnName("documentType");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<int>("FileCategory")
                        .HasColumnType("integer")
                        .HasColumnName("fileCategory");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("fileName");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastUpdatedDate");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploadDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeDocument");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("ownerId");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("templateId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmployeeEvaluations");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationAudience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeEvaluationId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeEvaluationId");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeEvaluationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeEvaluationAudience");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("EmployeeEvaluationId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeEvaluationId");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<float>("Score")
                        .HasColumnType("real")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeEvaluationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeEvaluationRatings");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("EmployeeEvaluationTemplate");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationTemplateItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("section");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("templateId");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmployeeEvaluationTemplateItem");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Client")
                        .HasColumnType("text")
                        .HasColumnName("client");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("endDate");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .HasColumnType("text")
                        .HasColumnName("degree");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("text")
                        .HasColumnName("fieldOfStudy");

                    b.Property<int>("HighestQualification")
                        .HasColumnType("integer")
                        .HasColumnName("highestQualification");

                    b.Property<int>("NQFLevel")
                        .HasColumnType("integer")
                        .HasColumnName("nqfLevel");

                    b.Property<string>("School")
                        .HasColumnType("text")
                        .HasColumnName("school");

                    b.Property<DateOnly?>("Year")
                        .HasColumnType("date")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeQualifications");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("roleId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.FieldCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("Internal")
                        .HasColumnType("boolean")
                        .HasColumnName("internal");

                    b.Property<string>("InternalTable")
                        .HasColumnType("text")
                        .HasColumnName("internalTable");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Regex")
                        .HasColumnType("text")
                        .HasColumnName("regex");

                    b.Property<bool>("Required")
                        .HasColumnType("boolean")
                        .HasColumnName("required");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("FieldCode");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.FieldCodeOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FieldCodeId")
                        .HasColumnType("integer")
                        .HasColumnName("fieldCodeId");

                    b.Property<string>("Option")
                        .HasColumnType("text")
                        .HasColumnName("option");

                    b.HasKey("Id");

                    b.HasIndex("FieldCodeId");

                    b.ToTable("FieldCodeOptions");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.MonthlyEmployeeTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessSupportTotal")
                        .HasColumnType("integer")
                        .HasColumnName("businessSupportTotal");

                    b.Property<int>("DesignerTotal")
                        .HasColumnType("integer")
                        .HasColumnName("designerTotal");

                    b.Property<int>("DeveloperTotal")
                        .HasColumnType("integer")
                        .HasColumnName("developerTotal");

                    b.Property<int>("EmployeeTotal")
                        .HasColumnType("integer")
                        .HasColumnName("employeeTotal");

                    b.Property<string>("Month")
                        .HasColumnType("text")
                        .HasColumnName("month");

                    b.Property<int>("ScrumMasterTotal")
                        .HasColumnType("integer")
                        .HasColumnName("scrumMasterTotal");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("MonthlyEmployeeTotal");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.PropertyAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("roleId");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("PropertyAccess");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.RoleAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Grouping")
                        .HasColumnType("text")
                        .HasColumnName("grouping");

                    b.Property<string>("Permission")
                        .HasColumnType("text")
                        .HasColumnName("permission");

                    b.HasKey("Id");

                    b.ToTable("RoleAccess");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.RoleAccessLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleAccessId")
                        .HasColumnType("integer")
                        .HasColumnName("roleAccessId");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("roleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleAccessId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleAccessLink");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("companyName");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("text")
                        .HasColumnName("employmentType");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<string>("Location")
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.AuditLog", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.ChartDataSet", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Chart", null)
                        .WithMany("Datasets")
                        .HasForeignKey("ChartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.ChartRoleLink", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Chart", "Chart")
                        .WithMany()
                        .HasForeignKey("ChartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chart");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Employee", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Client", "ClientAssigned")
                        .WithMany()
                        .HasForeignKey("ClientAllocated");

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "ChampionEmployee")
                        .WithMany()
                        .HasForeignKey("PeopleChampion");

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeAddress", "PostalAddress")
                        .WithMany()
                        .HasForeignKey("PostalAddressId");

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "TeamLeadAssigned")
                        .WithMany()
                        .HasForeignKey("TeamLead");

                    b.Navigation("ChampionEmployee");

                    b.Navigation("ClientAssigned");

                    b.Navigation("EmployeeType");

                    b.Navigation("PhysicalAddress");

                    b.Navigation("PostalAddress");

                    b.Navigation("TeamLeadAssigned");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeBanking", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeData", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.FieldCode", "FieldCode")
                        .WithMany()
                        .HasForeignKey("FieldCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FieldCode");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeDate", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeDocument", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluation", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Owner");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationAudience", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EmployeeEvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Evaluation");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationRating", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EmployeeEvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Evaluation");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationTemplateItem", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.EmployeeEvaluationTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeProject", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeQualification", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.EmployeeRole", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.FieldCodeOptions", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.FieldCode", "FieldCode")
                        .WithMany()
                        .HasForeignKey("FieldCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FieldCode");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.PropertyAccess", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.RoleAccessLink", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.RoleAccess", "RoleAccess")
                        .WithMany()
                        .HasForeignKey("RoleAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("RoleAccess");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.WorkExperience", b =>
                {
                    b.HasOne("RR.UnitOfWork.Entities.HRIS.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RR.UnitOfWork.Entities.HRIS.Chart", b =>
                {
                    b.Navigation("Datasets");
                });
#pragma warning restore 612, 618
        }
    }
}
